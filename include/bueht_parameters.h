#ifndef _bueht_parameters
#define _bueht_parameters

#include <bueht_constants.h>

namespace BUEHT
{

/*
  James McNeely

  The following definitions store parameters used by the program
  including basis function information.
  
*/

/*
  A paramater object is a "row" of the parameters
  listed below
*/

std::string bueht_supported_basis_sets[] = {
  "6-31G*",
  "DEF2-SV(P)",
  "DEF2-SVP",
  "DEF2-TZVP",
  "STO-3G"
};

/*
  This is a struct to store angular momentum i,j,k alongside
  a normalization factor when defining the real spherical
  harmonics below
*/

struct RealSphericalHarmonic 
{
  short l, m, index, length;
  double factor;
  int x, y, z;
}

/*
  Here we store the expansion of real spherical harmonics
  in terms of cartesians

  We order as m = -l .. 0 .. +l

  Also the order above for RealSphericalHarmonic holds ... x, y, z
*/

std::vector<RealSphericalHarmonic> RealSphericalHarmonics [] =
{
  {0,0,0,1,0.282094791773878,0,0,0}, // S
  {1,-1,0,1,0.488602511902920,0,1,0}, // PY
  {1,0,0,1,0.488602511902920,0,0,1}, // PZ
  {1,1,0,1,0.488602511902920,1,0,0}, // PX
  {2,-2,0,1,1.09254843059208,1,1,0},  // XY
  {2,-1,0,1,1.09254843059208,0,1,1},  // YZ
  {2,0,0,3,0.630783130505040,0,0,2},  // Z2
  {2,0,1,3,-0.315391565252520,2,0,0},  // Z2
  {2,0,2,3,-0.315391565252520,0,2,0},  // Z2
  {2,1,0,1,1.09254843059208,1,0,1},  // XZ
  {2,2,0,2,0.546274215296040,2,0,0},  // X2-Y2
  {2,2,1,2,-0.546274215296040,0,2,0},  // X2-Y2
  {3,-3,0,2,1.77013076977993,2,1,0},  // Y(3X2-Y2)
  {3,-3,1,2,-0.590043589926644,0,3,0},  // Y(3X2-Y2)
  {3,-2,0,1,2.89061144264055,1,1,1},  // xyz
  {3,-1,0,3,1.82818319785786,0,1,2},  // YZ2
  {3,-1,1,3,-0.457045799464466,2,1,0},  // YZ2
  {3,-1,2,3,-0.457045799464466,0,3,0},  // YZ2
  {3,0,0,3,0.746352665180231,0,0,3},  // Z3
  {3,0,1,3,-1.11952899777035,2,0,1},  // Z3
  {3,0,2,3,-1.11952899777035,0,2,1},  // Z3
  {3,1,0,3,1.82818319785786,1,0,2},  // XZ2
  {3,1,1,3,-0.457045799464466,1,2,0},  // XZ2
  {3,1,2,3,-0.457045799464466,3,0,0},  // XZ2
  {3,2,0,2,1.44530572132028,2,0,1},  // Z(X2-Y2)
  {3,2,1,2,-1.44530572132028,0,2,1},  // Z(X2-Y2)
  {3,3,0,2,-1.77013076977993,1,2,0},  // X(X2-3Y2)
  {3,3,1,2,0.590043589926644,3,0,0},  // X(X2-3Y2)
  {4,-4,0,2,2.50334294179670,3,1,0},  // XY(X2-Y2)
  {4,-4,1,2,-2.50334294179670,1,3,0},  // XY(X2-Y2)
  {4,-3,0,2,5.31039230933979,2,1,1},  // YZ(3*X2-Y2)
  {4,-3,1,2,-1.77013076977993,0,3,1},  // YZ(3*X2-Y2)
  {4,-2,0,3,5.67704817454536,1,1,2},  // XY(6*Z2-X2-Y2)
  {4,-2,1,3,-0.946174695757560,3,1,0},  // XY(6*Z2-X2-Y2)
  {4,-2,2,3,-0.946174695757560,1,3,0},  // XY(6*Z2-X2-Y2)
  {4,-1,0,3,2.67618617422916,0,1,3},  // YZ(4Z2-3X2-3Y2)
  {4,-1,1,3,-2.00713963067187,2,1,1},  // YZ(4Z2-3X2-3Y2)
  {4,-1,2,3,-2.00713963067187,0,3,1},  // YZ(4Z2-3X2-3Y2)
  {4,0,0,6,0.84628437532163,0,0,4},  // 8Z^4-24X2Z2-24Y2Z2+3X4+3Y4+6X2Y2
  {4,0,1,6,-2.53885312596490,2,0,2},  // 8Z^4-24X2Z2-24Y2Z2+3X4+3Y4+6X2Y2
  {4,0,2,6,-2.53885312596490,0,2,2},  // 8Z^4-24X2Z2-24Y2Z2+3X4+3Y4+6X2Y2
  {4,0,3,6,0.317356640745613,4,0,0},  // 8Z^4-24X2Z2-24Y2Z2+3X4+3Y4+6X2Y2
  {4,0,4,6,0.317356640745613,0,4,0},  // 8Z^4-24X2Z2-24Y2Z2+3X4+3Y4+6X2Y2
  {4,0,5,6,0.634713281491226,2,2,0},  // 8Z^4-24X2Z2-24Y2Z2+3X4+3Y4+6X2Y2
  {4,1,0,3,-2.00713963067187,3,0,1},  // -3X3Z-3XY2Z+4XZ3
  {4,1,1,3,-2.00713963067187,1,2,1},  // -3X3Z-3XY2Z+4XZ3
  {4,1,2,3,2.67618617422916,1,0,3},  // -3X3Z-3XY2Z+4XZ3
  {4,2,0,4,-0.473087347878780,4,0,0},  // -X4+Y4+6X2Z2-6Y2Z2
  {4,2,1,4,0.473087347878780,0,4,0},  // -X4+Y4+6X2Z2-6Y2Z2
  {4,2,2,4,2.83852408727268,2,0,2},  // -X4+Y4+6X2Z2-6Y2Z2
  {4,2,3,4,-2.83852408727268,0,2,2},  // -X4+Y4+6X2Z2-6Y2Z2
  {4,3,0,2,1.77013076977993,3,0,1},  // X3Z-3XY2Z
  {4,3,1,2,-5.31039230933979,1,2,1},  // X3Z-3XY2Z
  {4,4,0,3,0.625835735449176,4,0,0},  // X4-6X2Y2+Y4
  {4,4,1,3,-3.75501441269506,2,2,0},  // X4-6X2Y2+Y4
  {4,4,2,3,0.625835735449176,0,4,0},  // X4-6X2Y2+Y4
  {5,-5,0,3,3.28191028420085,4,1,0},  // 5X4Y-10X2Y3+Y5
  {5,-5,1,3,-6.56382056840170,2,3,0},  // 5X4Y-10X2Y3+Y5
  {5,-5,2,3,0.656382056840170,0,5,0},  // 5X4Y-10X2Y3+Y5
  {5,-4,0,2,8.30264925952417,3,1,1},  // X3YZ-XY3Z
  {5,-4,1,2,-8.30264925952417,1,3,1},  // X3YZ-XY3Z
  {5,-3,0,5,-1.46771489830575,4,1,0},  // -3X4Y-2X2Y3+Y5+24X2YZ2-8Y3Z2
  {5,-3,1,5,-0.978476598870501,2,3,0},  // -3X4Y-2X2Y3+Y5+24X2YZ2-8Y3Z2
  {5,-3,2,5,0.489238299435250,0,5,0},  // -3X4Y-2X2Y3+Y5+24X2YZ2-8Y3Z2
  {5,-3,3,5,11.7417191864460,2,1,2},  // -3X4Y-2X2Y3+Y5+24X2YZ2-8Y3Z2
  {5,-3,4,5,-3.91390639548200,0,3,2},  // -3X4Y-2X2Y3+Y5+24X2YZ2-8Y3Z2
  {5,-2,0,3,-4.79353678497332,3,1,1},  // -X3YZ-XY3Z+2XYZ3
  {5,-2,1,3,-4.79353678497332,1,3,1},  // -X3YZ-XY3Z+2XYZ3
  {5,-2,2,3,9.58707356994665,1,1,3},  // -X3YZ-XY3Z+2XYZ3
  {5,-1,0,6,0.452946651195697,4,1,0},  // X4Y+2X2Y3+YZ4-12X2YZ2-12Y3Z2+8YZ4
  {5,-1,1,6,0.905893302391394,2,3,0},  // X4Y+2X2Y3+YZ4-12X2YZ2-12Y3Z2+8YZ4
  {5,-1,2,6,0.452946651195697,0,5,0},  // X4Y+2X2Y3+YZ4-12X2YZ2-12Y3Z2+8YZ4
  {5,-1,3,6,-5.43535981434836,2,1,2},  // X4Y+2X2Y3+YZ4-12X2YZ2-12Y3Z2+8YZ4
  {5,-1,4,6,-5.43535981434836,0,3,2},  // X4Y+2X2Y3+YZ4-12X2YZ2-12Y3Z2+8YZ4
  {5,-1,5,6,3.62357320956558,0,1,4},  // X4Y+2X2Y3+YZ4-12X2YZ2-12Y3Z2+8YZ4
  {5,0,0,6,1.75425483680135,4,0,1},  // 15X4Z+30X2Y2Z+15Y4Z-40X2Z3-40Y2Z3+8Z5
  {5,0,1,6,3.50850967360271,2,2,1},  // 15X4Z+30X2Y2Z+15Y4Z-40X2Z3-40Y2Z3+8Z5
  {5,0,2,6,1.75425483680135,0,4,1},  // 15X4Z+30X2Y2Z+15Y4Z-40X2Z3-40Y2Z3+8Z5
  {5,0,3,6,-4.67801289813694,2,0,3},  // 15X4Z+30X2Y2Z+15Y4Z-40X2Z3-40Y2Z3+8Z5
  {5,0,4,6,-4.67801289813694,0,2,3},  // 15X4Z+30X2Y2Z+15Y4Z-40X2Z3-40Y2Z3+8Z5
  {5,0,5,6,0.935602579627389,0,0,5},  // 15X4Z+30X2Y2Z+15Y4Z-40X2Z3-40Y2Z3+8Z5
  {5,1,0,6,0.452946651195697,5,0,0},  // X5+2X3Y2+XY4-12X3Z2-12XY2Z2+8XZ4
  {5,1,1,6,0.905893302391394,3,2,0},  // X5+2X3Y2+XY4-12X3Z2-12XY2Z2+8XZ4
  {5,1,2,6,0.452946651195697,1,4,0},  // X5+2X3Y2+XY4-12X3Z2-12XY2Z2+8XZ4
  {5,1,3,6,-5.43535981434836,3,0,2},  // X5+2X3Y2+XY4-12X3Z2-12XY2Z2+8XZ4
  {5,1,4,6,-5.43535981434836,1,2,2},  // X5+2X3Y2+XY4-12X3Z2-12XY2Z2+8XZ4
  {5,1,5,6,3.62357320956558,1,0,4},  // X5+2X3Y2+XY4-12X3Z2-12XY2Z2+8XZ4
  {5,2,0,4,-2.39676839248666,4,0,1},  // -X4Z+Y4Z+2X2Z3-2Y2Z3
  {5,2,1,4,2.39676839248666,0,4,1},  // -X4Z+Y4Z+2X2Z3-2Y2Z3
  {5,2,2,4,4.79353678497332,2,0,3},  // -X4Z+Y4Z+2X2Z3-2Y2Z3
  {5,2,3,4,-4.79353678497332,0,2,3},  // -X4Z+Y4Z+2X2Z3-2Y2Z3
  {5,3,0,5,-0.489238299435250,5,0,0},  // -X5+2X3Y2+3XY4+8X3Z2-24XY2Z2
  {5,3,1,5,0.978476598870501,3,2,0},  // -X5+2X3Y2+3XY4+8X3Z2-24XY2Z2
  {5,3,2,5,1.46771489830575,1,4,0},  // -X5+2X3Y2+3XY4+8X3Z2-24XY2Z2
  {5,3,3,5,3.91390639548200,3,0,2},  // -X5+2X3Y2+3XY4+8X3Z2-24XY2Z2
  {5,3,4,5,-11.7417191864460,1,2,2},  // -X5+2X3Y2+3XY4+8X3Z2-24XY2Z2
  {5,4,0,3,2.07566231488104,4,0,1},  // X4Z-6X2Y2Z+Y4Z
  {5,4,1,3,-12.4539738892862,2,2,1},  // X4Z-6X2Y2Z+Y4Z
  {5,4,2,3,2.07566231488104,0,4,1},  // X4Z-6X2Y2Z+Y4Z
  {5,5,0,3,0.656382056840170,5,0,0},  // X5-10X3Y2+5XY4
  {5,5,1,3,-6.56382056840170,3,2,0},  // X5-10X3Y2+5XY4
  {5,5,2,3,3.28191028420085,1,4,0},  // X5-10X3Y2+5XY4
  {6,-6,0,3,4.09910463115149,5,1,0},  // 3X5Y-10X3Y3+3XY5
  {6,-6,1,3,-13.6636821038383,3,3,0},  // 3X5Y-10X3Y3+3XY5
  {6,-6,2,3,4.09910463115149,1,5,0},  // 3X5Y-10X3Y3+3XY5
  {6,-5,0,3,11.8330958111588,4,1,1},  // 5X4YZ-10X2Y3Z+Y5Z
  {6,-5,1,3,-23.6661916223175,2,3,1},  // 5X4YZ-10X2Y3Z+Y5Z
  {6,-5,2,3,2.36661916223175,0,5,1},  // 5X4YZ-10X2Y3Z+Y5Z
  {6,-4,0,4,-2.01825960291490,5,1,0},  // -X5Y+XY5+10X3YZ2-10XY3Z2
  {6,-4,1,4,2.01825960291490,1,5,0},  // -X5Y+XY5+10X3YZ2-10XY3Z2
  {6,-4,2,4,20.1825960291490,3,1,2},  // -X5Y+XY5+10X3YZ2-10XY3Z2
  {6,-4,3,4,-20.1825960291490,1,3,2},  // -X5Y+XY5+10X3YZ2-10XY3Z2
  {6,-3,0,5,-8.29084733563431,4,1,1},  // -9X4YZ-6X2Y3Z+3Y5Z+24X2YZ3-8Y3Z3
  {6,-3,1,5,-5.52723155708954,2,3,1},  // -9X4YZ-6X2Y3Z+3Y5Z+24X2YZ3-8Y3Z3
  {6,-3,2,5,2.76361577854477,0,5,1},  // -9X4YZ-6X2Y3Z+3Y5Z+24X2YZ3-8Y3Z3
  {6,-3,3,5,22.1089262283582,2,1,3},  // -9X4YZ-6X2Y3Z+3Y5Z+24X2YZ3-8Y3Z3
  {6,-3,4,5,-7.36964207611939,0,3,3},  // -9X4YZ-6X2Y3Z+3Y5Z+24X2YZ3-8Y3Z3
}

} // End of namespace BUEHT

#endif
